app = 'FIXME'
primary_region = 'sea'
swap_size_mb = 512

[build]
  # choose development.Dockerfile to build from local source
  # dockerfile = "development.Dockerfile"
  dockerfile = "release.Dockerfile"

[env]
  WTT_DATA_DIR = '/data'
  WTT_EXCLUDE_HEADERS = 'x-request-start,fly-client-ip,x-forwarded-for,fly-forwarded-proto,x-forwarded-proto,fly-forwarded-ssl,x-forwarded-ssl,fly-forwarded-port,x-forwarded-port,fly-region,fly-request-id,fly-tracestate,fly-traceparent,via'
  WTT_ADMIN_PORT = '3000'
  WTT_WEBHOOK_PORT = '3080'
  WTT_WEBHOOK_SSL_PORT = '3443'
  WTT_PUBLIC_WEBHOOK_PORT = '80'
  WTT_PUBLIC_WEBHOOK_SSL_PORT = '443'
  WTT_PUBLIC_TCP_PORT = '3002'

[[mounts]]
  source = 'data'
  destination = '/data'

[[vm]]
  size = 'shared-cpu-1x'

# Admin server
[[services]]
  internal_port = 3000
  protocol = "tcp"
  auto_stop_machines = "stop"
  auto_start_machines = true
  min_machines_running = 0
  
  [[services.ports]]
    handlers = ["tls", "http"]
    port = 8000

# Webhook server (HTTP)
[[services]]
  internal_port = 3080
  protocol = "tcp"
  auto_stop_machines = "stop"
  auto_start_machines = true
  min_machines_running = 0
  
  [[services.ports]]
    handlers = ["http"]
    port = 80

# Webhook server (HTTPS)
# If using TLS termination via WTT instead of Fly:
#   1. Set internal_port = 3443
#   2. Set handlers = ["http"]
[[services]]
  internal_port = 3080
  protocol = "tcp"
  auto_stop_machines = "stop"
  auto_start_machines = true
  min_machines_running = 0
  
  [[services.ports]]
    handlers = ["tls", "http"]
    port = 443

# TCP server
[[services]]
  internal_port = 3002
  protocol = "tcp"
  auto_stop_machines = "stop"
  auto_start_machines = true
  min_machines_running = 0
  
  [[services.ports]]
    port = 3002